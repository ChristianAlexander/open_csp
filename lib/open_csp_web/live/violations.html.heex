<div class="mb-4 flex flex-col space-y-2 md:items-end md:justify-between md:space-x-4 md:space-y-0 md:flex-row text-zinc-500">
  <.dropdown_menu class="mt-2">
    <.dropdown_menu_trigger>
      <.button variant="outline">Filters</.button>
    </.dropdown_menu_trigger>
    <.dropdown_menu_content align="start">
      <.menu class="w-56">
        <% current_disposition = Keyword.get(@filters, :disposition, "all") %>
        <.menu_label>Action</.menu_label>
        <.menu_group>
          <.menu_item phx-click="filter-disposition" disabled={current_disposition == "all"}>
            <.icon :if={current_disposition == "all"} name="hero-check" class="h-3 w-3 mr-2" />
            <span>All</span>
          </.menu_item>
          <.menu_item
            phx-click="filter-disposition"
            phx-value-disposition="enforce"
            disabled={current_disposition == "enforce"}
          >
            <.icon :if={current_disposition == "enforce"} name="hero-check" class="h-3 w-3 mr-2" />
            <span>Enforce</span>
          </.menu_item>
          <.menu_item
            phx-click="filter-disposition"
            phx-value-disposition="report"
            disabled={current_disposition == "report"}
          >
            <.icon :if={current_disposition == "report"} name="hero-check" class="h-3 w-3 mr-2" />
            <span>Report</span>
          </.menu_item>
        </.menu_group>
      </.menu>
    </.dropdown_menu_content>
  </.dropdown_menu>
  <div class="grow">
    <form phx-change="search" class="max-w-xl w-full">
      <.input
        type="text"
        placeholder="Search"
        phx-change="search"
        phx-debounce="500"
        name="search"
        value={@search_value}
      />
    </form>
  </div>
  <div class="flex flex-col items-end space-y-4">
    <form phx-change="page-size" class="inline-flex items-baseline space-x-2">
      <span class="text-nowrap text-sm">Page size</span>
      <.input
        type="select"
        name="size"
        class="min-w-24"
        value={@page_limit}
        options={[25, 50, 100, 250]}
      />
      <.link
        class="rounded-lg bg-zinc-100 hover:bg-zinc-200 py-2 px-3 text-sm font-semibold leading-6 text-zinc-800 active:text-zinc-800/80"
        href={~p"/violations/export?#{query_params(assigns)}"}
        target="_blank"
      >
        <.icon name="hero-arrow-down-tray" class="w-4 h-4 mr-1" /> Export
      </.link>
    </form>
    <.pagination class="md:justify-end w-min mr-0">
      <.pagination_content>
        <.pagination_item>
          <.pagination_live
            class="px-2"
            is-active={@live?}
            patch={filtered_path_for_live(assigns)}
            replace
          />
        </.pagination_item>
        <.pagination_item :if={@page > 1}>
          <.pagination_previous replace patch={filtered_path_for_page(assigns, @page - 1)} />
        </.pagination_item>
        <.pagination_item :for={{page_number, current_page?} <- pages(assigns)}>
          <.pagination_link
            is-active={current_page? and not @live?}
            replace
            patch={filtered_path_for_page(assigns, page_number)}
          >
            <%= page_number %>
          </.pagination_link>
        </.pagination_item>
        <.pagination_item :if={@page < page_count(assigns)}>
          <.pagination_next replace patch={filtered_path_for_page(assigns, @page + 1)} />
        </.pagination_item>
      </.pagination_content>
    </.pagination>
  </div>
</div>
<.table>
  <.table_caption><%= @total_count %> result(s)</.table_caption>
  <.table_header>
    <.table_row>
      <.table_head>Action</.table_head>
      <.table_head>Time (UTC)</.table_head>
      <.table_head>URI</.table_head>
      <.table_head>Directive</.table_head>
      <.table_head>Blocked URI</.table_head>
      <.table_head>Browser</.table_head>
      <.table_head></.table_head>
    </.table_row>
  </.table_header>
  <.table_body id="violations" phx-update="stream">
    <.table_row :for={{dom_id, violation} <- @streams.violations} id={dom_id}>
      <% ua = UAParser.parse(violation.user_agent) %>
      <.table_cell>
        <.badge variant={
          if violation.disposition == :enforce, do: "destructive", else: "secondary"
        }>
          <%= violation.disposition %>
        </.badge>
      </.table_cell>
      <.table_cell><%= violation.happened_at %></.table_cell>
      <.table_cell class="break-all"><%= violation.url %></.table_cell>
      <.table_cell class="text-nowrap"><%= violation.effective_directive %></.table_cell>
      <.table_cell class="break-all"><%= violation.blocked_url %></.table_cell>
      <.table_cell>
        <div><%= to_string(ua) %></div>
        <div><%= ua.os.family %></div>
      </.table_cell>
      <.table_cell>
        <.sheet>
          <.sheet_trigger target={"#{dom_id}-sheet"}>
            <.button variant="outline">Details</.button>
          </.sheet_trigger>
          <.sheet_content id={"#{dom_id}-sheet"} class="md:max-w-xl space-y-4">
            <.sheet_header>
              <.sheet_title>
                CSP Violation
              </.sheet_title>
              <.sheet_description>
                <h2 class="text-sm font-medium text-zinc-500">Action</h2>
                <.badge
                  variant={
                    if violation.disposition == :enforce, do: "destructive", else: "secondary"
                  }
                  class="self-start"
                >
                  <%= violation.disposition %>
                </.badge>
                <h2 class="text-sm font-medium text-zinc-500">Time (UTC)</h2>
                <div><%= violation.happened_at %></div>
                <h2 class="text-sm font-medium text-zinc-500">IP Address</h2>
                <div class="text-sm font-medium text-zinc-900">
                  <%= violation.remote_ip %>
                </div>
                <h2 class="text-sm font-medium text-zinc-500">User Agent</h2>
                <div class="text-sm font-medium text-zinc-900">
                  <%= violation.user_agent %>
                </div>
              </.sheet_description>
            </.sheet_header>
            <.separator />
            <pre class="overflow-x-auto p-4 bg-zinc-100 rounded-md"><%= Jason.encode!(violation.raw, pretty: true) %></pre>
          </.sheet_content>
        </.sheet>
      </.table_cell>
    </.table_row>
  </.table_body>
</.table>
